<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\campus\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "share_stream".
 *
 * @property integer $share_stream_id
 * @property integer $user_id
 * @property integer $auditor_id
 * @property integer $school_id
 * @property integer $grade_id
 * @property string $body
 * @property integer $status
 * @property integer $updated_at
 * @property integer $created_at
 * @property string $aliasModel
 */
abstract class ShareStream extends \yii\db\ActiveRecord
{

    CONST SHARESTREAM_STATUS_OPEN = 10; //正常;
    CONST SHARESTREAM_STATUS_CLOSE = 20 ; //关闭;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'share_stream';
    }

    public static function getDb(){
        return Yii::$app->get('campus');
    }
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['body'], 'required'],
            [['status','author_id'], 'integer'],
            ['author_id','default','value'=>isset(Yii::$app->user->identity->id) ? Yii::$app->user->identity->id  : '' ],
            ['status','default','value'=>self::SHARESTREAM_STATUS_OPEN],
            [['body'], 'string', 'max' => 256]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'share_stream_id' => Yii::t('backend', 'Share Stream ID'),
            'author_id' => Yii::t('backend', 'User ID'),
            //'auditor_id' => Yii::t('backend', 'Auditor ID'),
           // 'school_id' => Yii::t('backend', 'School ID'),
            //'grade_id' => Yii::t('backend', '审核人'),
            'body' => Yii::t('backend', '消息内容'),
            'status' => Yii::t('backend', '状态'),
            'updated_at' => Yii::t('backend', 'Updated At'),
            'created_at' => Yii::t('backend', 'Created At'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
           // 'grade_id' => Yii::t('backend', '审核人'),
            'body' => Yii::t('backend', '消息内容'),
            'status' => Yii::t('backend', '状态'),
        ]);
    }


    public function getShareToFile(){
        return $this->hasmany(\backend\modules\campus\models\ShareToFile::className(),['share_stream_id'=>'share_stream_id']);
    }

    public function getShareToGrade(){
        return $this->hasmany(\backend\modules\campus\models\ShareStreamToGrade::className(),['share_stream_id'=>'share_stream_id']);
    }

    public  function getUserName($id)
    {

        $user = \common\models\User::findOne($id);
        $name = '';
        if(isset($user->realname) && !empty($user->realname)){
            return $user->realname;
        }
        if(isset($user->username) && !empty($user->username)){
           return $user->username;
        }
        // if(isset($user->phone_number) && !empty($user->phone_number)){
        //     return $user->phone_number;
        // }
        return $name;
    }
    //获取用户头像
    public function getUserAvatar($id)
    {
       $user = \common\models\User::findOne($id);
       $proFileUser = $user->userProfile;
       $avatar = Yii::$app->params['user_avatar'];
       // 默认头像
        if(isset($proFileUser->avatar_base_url) && !empty($proFileUser->avatar_base_url))
        {
           return  $avatar = $proFileUser->avatar_base_url.$proFileUser->avatar_path;
        }else{
            $fansMpUser = isset($user->fansMp) ? $user->fansMp : '';
            if($fansMpUser){
               return  $avatar = $fansMpUser->avatar;
            }
        }
        return $avatar;
    }
    /**
     * @inheritdoc
     * @return \backend\modules\campus\models\query\ShareStreamQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\campus\models\query\ShareStreamQuery(get_called_class());
    }


}
