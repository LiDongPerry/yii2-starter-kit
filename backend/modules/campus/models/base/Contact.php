<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\campus\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;
use common\models\PhoneValidator;

/**
 * This is the base-model class for table "contact".
 *
 * @property integer $contact_id
 * @property string $username
 * @property integer $auditor_id
 * @property integer $phone_number
 * @property string $email
 * @property string $body
 * @property integer $status
 * @property integer $updated_at
 * @property integer $created_at
 * @property string $aliasModel
 */
abstract class Contact extends \yii\db\ActiveRecord
{

    public $verifyCode; 
    CONST CONTACT_STATUS_NOT_AUDIT = 1; //未查看
    CONST CONTACT_STATUS_APPROVED  = 2; //以查看
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'contact';
    }

    public static function OptsStatus(){
        return [
           self::CONTACT_STATUS_NOT_AUDIT   => '未查看',
            self::CONTACT_STATUS_APPROVED    => '以查看'
        ];
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['username','phone_number', 'body'], 'required'],
            [['auditor_id', 'status'], 'integer'],
            [['username'], 'string', 'max' => 32],
            ['status','default','value'=>Contact::CONTACT_STATUS_NOT_AUDIT],
            ['verifyCode','required','on'=>'AjaxContact'],
            ['verifyCode','captcha','captchaAction'=>'/site/contact_captcha' ,'on'=>'AjaxContact'],
            [['phone_number'], PhoneValidator::className()],
            [['email', 'body'], 'string', 'max' => 255],
            ['email','email']
        ];
    }
    public static function getDb(){
         return \Yii::$app->modules['campus']->get('campus');
    }
    public  function scenarios(){
        $scenarios = parent::scenarios();
        //$scenarios['AjaxApply'] = ['verifyCode'];
        return $scenarios;
    }
    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'contact_id' => Yii::t('backend', 'Contact ID'),
            'username' => Yii::t('backend', '姓名'),
            'auditor_id' => Yii::t('backend', '审核人'),
            'phone_number' => Yii::t('backend', '联系人电话'),
            'email' => Yii::t('backend', '邮箱'),
            'verifyCode'=>Yii::t('backend','验证码'),
            'body' => Yii::t('backend', '留言内容'),
            'status' => Yii::t('backend', '状态'),
            'updated_at' => Yii::t('backend', 'Updated At'),
            'created_at' => Yii::t('backend', 'Created At'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'auditor_id' => Yii::t('backend', '审核人'),
            'phone_number' => Yii::t('backend', '联系人电话'),
            'email' => Yii::t('backend', '邮箱'),
            'body' => Yii::t('backend', '留言内容'),
            'status' => Yii::t('backend', '未查看：1，已查看： 2，已过期：3\','),
        ]);
    }

    public function getUser(){
        return $this->HasOne(\common\models\User::ClassName(),['id'=>'auditor_id']);
    }
    
    /**
     * @inheritdoc
     * @return \backend\modules\campus\models\query\ContactQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\campus\models\query\ContactQuery(get_called_class());
    }


}
