<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\campus\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "notice".
 *
 * @property string $notice_id
 * @property string $title
 * @property string $message
 * @property string $message_hash
 * @property integer $sender_id
 * @property integer $receiver_id
 * @property string $receiver_phone_numeber
 * @property string $receiver_name
 * @property integer $is_sms
 * @property integer $is_wechat_message
 * @property string $wechat_message_id
 * @property integer $times
 * @property integer $status_send
 * @property integer $status_check
 * @property integer $created_at
 * @property integer $updated_at
 * @property string $aliasModel
 */
abstract class Notice extends \yii\db\ActiveRecord
{

    CONST STATUS_CHECK_LOOK = 10; //查看；
    CONST STATUS_CHECK_NOT_LOOK = 20; //未查看；

    CONST CATEGORY_ONE     = 1; //消息通知；
    CONST CATEGORY_TWO     = 2; //老师对学生说的话；

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'notice';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    public static function getDb(){
        return Yii::$app->get('campus');
    }
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['message', 'sender_id'], 'required'],
            [['message'], 'string'],
            [['sender_id', 'receiver_id', 'is_sms', 'is_wechat_message', 'times', 'status_send', 'status_check'], 'integer'],
            [['title'], 'string', 'max' => 128],
            [['message_hash', 'receiver_name', 'wechat_message_id'], 'string', 'max' => 32],
            [['receiver_phone_numeber'], 'string', 'max' => 11]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'notice_id' => Yii::t('backend', '通知ID'),
            'title' => Yii::t('backend', '消息标题'),
            'message' => Yii::t('backend', '通知消息内容'),
            'message_hash' => Yii::t('backend', 'Message Hash'),
            'sender_id' => Yii::t('backend', '发送者ID'),
            'receiver_id' => Yii::t('backend', '接收者ID'),
            'receiver_phone_numeber' => Yii::t('backend', '接收者手机号'),
            'receiver_name' => Yii::t('backend', '接受者称谓'),
            'is_sms' => Yii::t('backend', '10：发送短信，发送消息标题；11：发送短信，发送消息体'),
            'is_wechat_message' => Yii::t('backend', '1：发送微信消息'),
            'wechat_message_id' => Yii::t('backend', 'Wechat Message ID'),
            'times' => Yii::t('backend', '发送次数'),
            'status_send' => Yii::t('backend', '状态：10发送'),
            'status_check' => Yii::t('backend', '状态：10查看'),
            'created_at' => Yii::t('backend', 'Created At'),
            'updated_at' => Yii::t('backend', 'Updated At'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'notice_id' => Yii::t('backend', '通知ID'),
            'title' => Yii::t('backend', '消息标题'),
            'message' => Yii::t('backend', '通知消息内容'),
            'sender_id' => Yii::t('backend', '发送者ID'),
            'receiver_id' => Yii::t('backend', '接收者ID'),
            'receiver_phone_numeber' => Yii::t('backend', '接收者手机号'),
            'receiver_name' => Yii::t('backend', '接受者称谓'),
            'is_sms' => Yii::t('backend', '10：发送短信，发送消息标题；11：发送短信，发送消息体'),
            'is_wechat_message' => Yii::t('backend', '1：发送微信消息'),
            'times' => Yii::t('backend', '发送次数'),
            'status_send' => Yii::t('backend', '状态：10发送'),
            'status_check' => Yii::t('backend', '状态：10查看'),
        ]);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\campus\models\query\NoticeQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\campus\models\query\NoticeQuery(get_called_class());
    }


}
