<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\campus\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "users_to_grade".
 *
 * @property integer $user_to_grade_id
 * @property integer $user_id
 * @property integer $school_id
 * @property integer $grade_id
 * @property integer $user_title_id_at_grade
 * @property integer $status
 * @property integer $sort
 * @property integer $grade_user_type
 * @property integer $updated_at
 * @property integer $created_at
 * @property string $aliasModel
 */
abstract class UserToGrade extends \yii\db\ActiveRecord
{
    CONST USER_GRADE_STATUS_NORMAL  = 1 ; //正常；
    CONST USER_GRADE_STATUS_RETIRED = 4 ; //退休；
    CONST USER_GRADE_STATUS_CHANGE  = 3 ; //转班；
    CONST USER_GRADE_STATUS_DELETE  = 0 ; // 删除；
    CONST USER_GRADE_STATUS_AUDIT   = 2 ; //审核；

    CONST GRADE_USER_TYPE_STUDENT   = 10 ; //学生
    CONST GRADE_USER_TYOE_TEACHER   = 20 ; //老师
    CONST GRADE_USER_TYOE_PARENTS   = 30 ; //家长

    public static function optsStatus(){
        return [
            self::USER_GRADE_STATUS_NORMAL  =>  '正常',
            self::USER_GRADE_STATUS_RETIRED =>  '退休',
            self::USER_GRADE_STATUS_CHANGE  =>  '转班',
            self::USER_GRADE_STATUS_DELETE  =>  '删除',
        ];
    }

    public static function getStatusLabel($value){
        $lable = self::optsStatus();
        if(isset($lable[$value])){
            return $lable[$value];
        }
            return $value;
    }

    public static function optsUserType(){
        return [
            self::GRADE_USER_TYPE_STUDENT=>'学生',//,
            self::GRADE_USER_TYOE_TEACHER=>'老师',//,
        ];
    }
    //用户在班级的描述性展示Title，没有逻辑
    public static function optsUserTitleType(){
        return [
            self::GRADE_USER_TYPE_STUDENT=>'学生',//,
            self::GRADE_USER_TYOE_TEACHER=>'老师',//,
            self::GRADE_USER_TYOE_PARENTS=> '家长'
        ];
    }

    public static function UserToTypelable($value){
        $lable = self::optsUserType();
        if(isset($lable[$value])){
            return $lable[$value];
        }
            return $value;
    }


    public static function UserTitleTypelable($value){
        $lable = self::optsUserTitleType();
        if(isset($lable[$value])){
            return $lable[$value];
        }
            return $value;
    }

     /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        // dump(\Yii::$app->modules['campus']->get('campus'));exit;
        //return \Yii::$app->getModule('campus')->campus;
        return Yii::$app->get('campus');
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'users_to_grade';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'school_id', 'grade_id'], 'required'],
            [['user_id', 'school_id', 'grade_id', 'user_title_id_at_grade', 'status', 'sort', 'grade_user_type'], 'integer'],
            [['user_id'],'unique', 'targetAttribute' => ['user_id','school_id', 'grade_id', 'grade_user_type'], 'message' => '用户已经存在本班级']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'user_to_grade_id'       => Yii::t('backend', '自增ID'),
            'user_id'                => Yii::t('backend', '用户'),
            'school_id'              => Yii::t('backend', '学校'),
            'grade_id'               => Yii::t('backend', '班级'),
            'user_title_id_at_grade' => Yii::t('backend', '展示标题'),
            'status'                 => Yii::t('backend', '状态'),
            'sort'                   => Yii::t('backend', '默认与排序'),
            'grade_user_type'        => Yii::t('backend', '关系类型'),
            'updated_at'             => Yii::t('backend', '更新时间'),
            'created_at'             => Yii::t('backend', '创建时间'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'user_to_grade_id'       => Yii::t('backend', '自增ID'),
            'user_id'                => Yii::t('backend', '创建后不可更改'),
            // 'school_id'              => Yii::t('backend', '学校ID'),
            // 'grade_id'               => Yii::t('backend', '班级ID'),
            'user_title_id_at_grade' => Yii::t('backend', '用户在班级的描述性标题，仅展示'),
            // 'status'                 => Yii::t('backend', '状态'),
            'sort'                   => Yii::t('backend', '排序'),
            'grade_user_type'        => Yii::t('backend', '用户与学校的关系或类型'),
        ]);
    }
    public function getGrade(){

        return $this->hasOne(\backend\modules\campus\models\Grade::className(),['grade_id'=>'grade_id']);
    }

    public function getUser(){
        return $this->hasOne(\common\models\User::className(),['id'=>'user_id']);
    }
    public function getSchool(){
        return $this->hasOne(\backend\modules\campus\models\School::className(),['school_id'=>'school_id']);
    }
    /**
     * @inheritdoc
     * @return \backend\modules\campus\models\query\UserToGradeQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\campus\models\query\UserToGradeQuery(get_called_class());
    }


}
