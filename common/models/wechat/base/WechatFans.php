<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\wechat\base;

use Yii;

/**
 * This is the base-model class for table "wechat_fans".
 *
 * @property integer $fans_id
 * @property integer $wechat_id
 * @property integer $user_id
 * @property string $open_id
 * @property integer $status
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property \common\models\wechat\WechatFansMp[] $wechatFansMps
 * @property string $aliasModel
 */
abstract class WechatFans extends \yii\db\ActiveRecord
{

    CONST STATUS_WATCHABLE = 1;
    CONST STATUS_UNWATCHABLE = 2;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'wechat_fans';
    }

    /**
     * Alias name of table for crud viewsLists all Area models.
     * Change the alias name manual if needed later
     * @return string
     */
    public function getAliasModel($plural=false)
    {
        if($plural){
            return Yii::t('common', 'WechatFans');
        }else{
            return Yii::t('common', 'WechatFans');
        }
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['wechat_id', 'user_id', 'status', 'created_at', 'updated_at'], 'integer'],
            [['open_id'], 'string', 'max' => 50]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'fans_id' => Yii::t('common', 'Fans ID'),
            'wechat_id' => Yii::t('common', 'Wechat ID'),
            'user_id' => Yii::t('common', 'User ID'),
            'open_id' => Yii::t('common', 'Open ID'),
            'status' => Yii::t('common', 'Status'),
            'created_at' => Yii::t('common', 'Created At'),
            'updated_at' => Yii::t('common', 'Updated At'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(
            parent::attributeHints(),
            [
            'fans_id' => Yii::t('common', 'Fans Id'),
            'wechat_id' => Yii::t('common', 'Wechat Id'),
            'user_id' => Yii::t('common', 'User Id'),
            'open_id' => Yii::t('common', '微信open_id'),
            'status' => Yii::t('common', '关注状态：0默认；1：关注 2：取消关注'),
            'created_at' => Yii::t('common', 'Created At'),
            'updated_at' => Yii::t('common', 'Updated At'),
            ]);
    }
    public static function optStatus(){
        return [
            self::STATUS_WATCHABLE => Yii::t('common','关注'),
            self::STATUS_UNWATCHABLE => Yii::t('common','取消关注'),
        ];
    }
    public static function getStatusValueLabel($value){
        $labels=self::optStatus();
        if(isset($labels)){
            return $labels[$value];
        }
        return $value;
    }
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getWechatFansMps()
    {
        return $this->hasMany(\common\models\wechat\WechatFansMp::className(), ['fans_id' => 'fans_id']);
    }


    public function getUser()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'user_id']);
    }

    public function getWechat()
    {
        return $this->hasOne(Wechat::className(), ['id' => 'wechat_id']);
    }


}
