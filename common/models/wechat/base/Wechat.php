<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\wechat\base;

use Yii;

/**
 * This is the base-model class for table "wechat".
 *
 * @property integer $wechat_id
 * @property string $title
 * @property string $token
 * @property string $access_token
 * @property string $account
 * @property string $original
 * @property string $appid
 * @property string $secret
 * @property string $encoding_aes_key
 * @property string $avatar
 * @property string $qrcode
 * @property integer $store_id
 * @property integer $type
 * @property integer $status
 * @property integer $created_at
 * @property integer $updated_at
 * @property string $aliasModel
 */
abstract class Wechat extends \yii\db\ActiveRecord
{

    CONST STATUS_ACTIVE = 1;
    CONST STATUS_INACTIVE = 0;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'wechat';
    }

    /**
     * Alias name of table for crud viewsLists all Area models.
     * Change the alias name manual if needed later
     * @return string
     */
    public function getAliasModel($plural=false)
    {
        if($plural){
            return Yii::t('common', 'Wechats');
        }else{
            return Yii::t('common', 'Wechat');
        }
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['appid', 'secret', 'encoding_aes_key'], 'required'],
            [['store_id', 'type', 'status', 'created_at', 'updated_at'], 'integer'],
            [['title'], 'string', 'max' => 64],
            [['token', 'account'], 'string', 'max' => 32],
            [['access_token', 'avatar', 'qrcode'], 'string', 'max' => 255],
            [['original'], 'string', 'max' => 40],
            [['appid', 'secret'], 'string', 'max' => 50],
            [['encoding_aes_key'], 'string', 'max' => 43]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'wechat_id' => Yii::t('common', 'Wechat ID'),
            'title' => Yii::t('common', 'Title'),
            'token' => Yii::t('common', 'Token'),
            'access_token' => Yii::t('common', 'Access Token'),
            'account' => Yii::t('common', 'Account'),
            'original' => Yii::t('common', 'Original'),
            'appid' => Yii::t('common', 'Appid'),
            'secret' => Yii::t('common', 'Secret'),
            'encoding_aes_key' => Yii::t('common', 'Encoding Aes Key'),
            'avatar' => Yii::t('common', 'Avatar'),
            'qrcode' => Yii::t('common', 'Qrcode'),
            'store_id' => Yii::t('common', 'Store ID'),
            'type' => Yii::t('common', 'Type'),
            'status' => Yii::t('common', 'Status'),
            'created_at' => Yii::t('common', 'Created At'),
            'updated_at' => Yii::t('common', 'Updated At'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(
            parent::attributeHints(),
            [
            'wechat_id' => Yii::t('common', 'Wechat Id'),
            'title' => Yii::t('common', '公众号名称'),
            'token' => Yii::t('common', '微信服务访问验证token'),
            'access_token' => Yii::t('common', '访问微信服务验证token'),
            'account' => Yii::t('common', '唯一手机号'),
            'original' => Yii::t('common', 'Original'),
            'appid' => Yii::t('common', 'AppID'),
            'secret' => Yii::t('common', 'AppSecret'),
            'encoding_aes_key' => Yii::t('common', '消息加密秘钥EncodingAesKey'),
            'avatar' => Yii::t('common', '头像地址'),
            'qrcode' => Yii::t('common', '二维码地址'),
            'store_id' => Yii::t('common', '所属店铺ID'),
            'type' => Yii::t('common', '类型'),
            'status' => Yii::t('common', '0无效；1有效'),
            'created_at' => Yii::t('common', 'Created At'),
            'updated_at' => Yii::t('common', 'Updated At'),
            ]);
    }




}
